---
deployment:
  tasks:
    - export DEPLOYPATH=/home/YOUR_CPANEL_USERNAME/fagnoon-trips/ # IMPORTANT: Replace YOUR_CPANEL_USERNAME
    - echo "Starting deployment script..." > $DEPLOYPATH/deployment_debug.txt
    - date >> $DEPLOYPATH/deployment_debug.txt
    - echo "DEPLOYPATH is set to $DEPLOYPATH" >> $DEPLOYPATH/deployment_debug.txt
    - set -ex # Print commands and exit on error

    - echo "Changing to DEPLOYPATH..." >> $DEPLOYPATH/deployment_debug.txt
    - cd $DEPLOYPATH >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Current directory: $(pwd)" >> $DEPLOYPATH/deployment_debug.txt

    - echo "Running Composer install..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php /opt/cpanel/composer/bin/composer install --no-dev --optimize-autoloader >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Composer install finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Generating application key (if not set)..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan key:generate --force >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Application key generation finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Running migrations..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan migrate --force >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Migrations finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Running seeders..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan db:seed --force >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Seeders finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Linking storage..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan storage:link >> $DEPLOYPATH/deployment_debug.txt 2>&1 || echo "Storage link command executed (might have failed if link already exists or permissions issue)." >> $DEPLOYPATH/deployment_debug.txt
    - echo "Storage linking finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Clearing Laravel caches..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan optimize:clear >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Cache clearing finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Caching configuration..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan config:cache >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Configuration caching finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Caching routes..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan route:cache >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "Route caching finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Caching views..." >> $DEPLOYPATH/deployment_debug.txt
    - /usr/local/bin/php artisan view:cache >> $DEPLOYPATH/deployment_debug.txt 2>&1
    - echo "View caching finished." >> $DEPLOYPATH/deployment_debug.txt

    # Frontend asset compilation (Uncomment and adjust if you use npm/yarn)
    # - echo "Running npm install..." >> $DEPLOYPATH/deployment_debug.txt
    # - npm install >> $DEPLOYPATH/deployment_debug.txt 2>&1
    # - echo "npm install finished." >> $DEPLOYPATH/deployment_debug.txt
    # - echo "Running npm run build..." >> $DEPLOYPATH/deployment_debug.txt
    # - npm run build >> $DEPLOYPATH/deployment_debug.txt 2>&1
    # - echo "npm run build finished." >> $DEPLOYPATH/deployment_debug.txt

    - echo "Deployment script finished successfully." >> $DEPLOYPATH/deployment_debug.txt
    - date >> $DEPLOYPATH/deployment_debug.txt

