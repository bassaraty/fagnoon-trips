name: Laravel CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP & Extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, curl, zip, sqlite, pdo_sqlite

      - name: Cache Composer deps
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles("**/composer.lock") }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy .env & adjust for SQLite (File-based)
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          mkdir -p database
          touch database/database.sqlite
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=${{ github.workspace }}/database/database.sqlite" >> .env
          # Remove any conflicting DB settings from .env.example if they were copied
          sed -i '/^DB_CONNECTION=mysql/d' .env
          sed -i '/^DB_HOST=/d' .env
          sed -i '/^DB_PORT=/d' .env
          sed -i '/^DB_DATABASE=laravel/d' .env # Common default
          sed -i '/^DB_USERNAME=/d' .env
          sed -i '/^DB_PASSWORD=/d' .env
          # Ensure only one DB_DATABASE and DB_CONNECTION for sqlite is present
          # This is a bit more robust than just replacing if the lines weren't there to begin with
          awk '!/^DB_CONNECTION=/ || !c1++ {print} !/^DB_DATABASE=/ || !c2++ {print}' .env > .env.tmp && mv .env.tmp .env
          # Final check and ensure our sqlite settings are there if somehow removed by awk
          grep -qxF "DB_CONNECTION=sqlite" .env || echo "DB_CONNECTION=sqlite" >> .env
          grep -qxF "DB_DATABASE=${{ github.workspace }}/database/database.sqlite" .env || echo "DB_DATABASE=${{ github.workspace }}/database/database.sqlite" >> .env

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Generate App Key & Link Storage
        run: |
          php artisan key:generate --ansi --force
          php artisan storage:link

      - name: Publish Spatie Permission Config
        run: php artisan vendor:publish \
            --provider="Spatie\Permission\PermissionServiceProvider" \
            --tag="config" --force

      - name: Cache Configuration
        run: php artisan config:cache

      - name: Run Migrations & Seeders
        run: |
          php artisan migrate --force --no-interaction
          php artisan db:seed --force --no-interaction

      - name: Run Test Suite
        run: php artisan test --no-interaction

